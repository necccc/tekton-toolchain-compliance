version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: secure-lock-kubernetes.svg
  required:
    - build
    - tekton-definition-repo
    - application-repo
  info:
    git url: >
      "[" + $env.repository + "]" +
        "(" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "]" +
        "(" + $env.repository +
          "/tree/" + $env.branch + ")"
toolchain:
  name: 'tekton-toolchain-compliance-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted" 
services:
  tekton-definition-repo:
    service_id: github_integrated
    parameters:
      source_repo_url: 'https://github.ibm.com/cocoa/tekton-poc-pipeline'
      owner_id: 'cocoa'
      type: clone
      has_issues: false
      enable_traceability: false
      legal: true
  application-repo:   
    service_id: github_integrated  
    parameters:
      source_repo_url: 'https://github.ibm.com/cocoa/cocoa-example-app'
      type: clone
      has_issues: false
      enable_traceability: false
      legal: true
  build:
    service_id: pipeline
    parameters:
      services:
        - tekton-definition-repo
        - application-repo
      name: '{{services.repo.parameters.repo_name}}'
      type: tekton
      ui-pipeline: true
      configuration:
        content:
          $text: tekton.yaml
        env:
          DEFINITION_REPO: '{{services.tekton-definition-repo.parameters.source_repo_url}}'
          APPLICATION_REPO: '{{services.application-repo.parameters.source_repo_url}}'
          CF_APP_NAME: '{{form.pipeline.parameters.app-name}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          PROD_CLUSTER_NAME: '{{form.pipeline.parameters.prod-cluster-name}}'
          PROD_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.prod-cluster-namespace}}'
          REVISION: master
        execute: true
form:
  pipeline:
    parameters:
      app-name: '{{services.repo.parameters.repo_name}}'
      prod-cluster-namespace: prod
    schema:
      $ref: deploy.json
